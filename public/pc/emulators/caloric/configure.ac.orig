# $Id:  $

AC_INIT(src/oric.c)

AC_PREREQ(2.50)
AC_CONFIG_AUX_DIR(autotools)
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(caloric, 0.1)
LT_VERSION="1:0:1"
AC_SUBST(LT_VERSION)
AM_CONFIG_HEADER(config.h)

AM_PROG_CC_C_O
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
_AM_DEPENDENCIES([OBJC])
OBJC="${CC}"
AC_SUBST(OBJC)
AC_SUBST(OBJCFLAGS)
AM_PROG_AS

AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_LIBTOOL_CXX

AC_C_CONST
AC_C_INLINE
AC_TYPE_SIGNAL

dnl AC_PROG_EGREP only exists in autoconf 2.54+, so we use AC_EGREP_CPP right
dnl now otherwise it might be set in an obscure if statement. Same thing for
dnl PKG_PROG_PKG_CONFIG which needs to be called first.
AC_EGREP_CPP(yes, foo)
PKG_PROG_PKG_CONFIG()
m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
if test "${build}" != "${host}" -a "${PKG_CONFIG_LIBDIR}" = ""; then
  export PKG_CONFIG_LIBDIR=/dev/null
fi


AC_CHECK_HEADERS(stdio.h stdarg.h signal.h sys/ioctl.h sys/time.h inttypes.h endian.h unistd.h arpa/inet.h netinet/in.h winsock2.h errno.h locale.h getopt.h dlfcn.h)
AC_CHECK_FUNCS(signal ioctl vsnprintf getenv putenv strcasecmp htons)
AC_CHECK_FUNCS(usleep gettimeofday)

AC_CHECK_FUNCS(getopt_long,
 [AC_DEFINE(HAVE_GETOPT_LONG, 1, Define to 1 if you have the `getopt_long' function.)],
 [AC_CHECK_LIB(gnugetopt, getopt_long,
   [AC_DEFINE(HAVE_GETOPT_LONG, 1, Define to 1 if you have the `getopt_long' function.)
    GETOPT_LIBS="${GETOPT_LIBS} -lgnugetopt"])])
AC_SUBST(GETOPT_LIBS)

AC_MSG_CHECKING(for Sleep)
AC_TRY_COMPILE([#include <windows.h>],[Sleep(42);],
 [AC_MSG_RESULT(yes)
  AC_DEFINE(HAVE_SLEEP, 1, [Define to 1 if you have the `Sleep' function.])],
 [AC_MSG_RESULT(no)])


AC_CHECK_LIB(m, sin, MATH_LIBS="${MATH_LIBS} -lm")


dnl Check for SDL
SDL_VERSION=1.2.0
AM_PATH_SDL($SDL_VERSION,
            AC_DEFINE(HAVE_SDL, 1, [Foo]),
            AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)
AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)


#PKG_CHECK_MODULES(SDL, sdl) 
#SDL_CFLAGS=sdl-config --cflags)
#SDL_LIBS= $(shell sdl-config --libs)
#AC_SUBST(SDL_CFLAGS)
#AC_SUBST(SDL_LIBS)
#AC_CHECK_LIB(SDL, SDL_Init, AC_DEFINE(HAVE_SDL, 1, [Foo]))

PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.2 glib-2.0 >= 2.2, [
                       enable_gtk="yes"
                       AC_SUBST(GTK_CFLAGS)
                       AC_SUBST(GTK_LIBS)], [
		       enable_gtk="no"])

PKG_CHECK_MODULES(GLADE, libglade-2.0, [
                         enable_glade="yes"
                         AC_SUBST(GLADE_CFLAGS)
                         AC_SUBST(GLADE_LIBS)], [
			 enable_glade="no"])


AC_CHECK_LIB(asound, snd_pcm_open, AC_DEFINE(HAVE_ALSA, 1, [Foo]))



if test "${enable_gtk}" = "yes"; then
   if test "${enable_glade}" = "yes"; then
      AC_DEFINE(HAVE_DEBUGGER, 1, Define to 1 to enable debugger)
   fi
fi

AC_SUBST(MATH_LIBS)
AC_SUBST(GETOPT_LIBS)
AC_SUBST(CALORIC_LIBS)

# Optimizations
CFLAGS="${CFLAGS} -g -ggdb -O3 -Wl,--export-dynamic"




AC_CONFIG_FILES([
  Makefile
  src/Makefile
])
AC_CONFIG_FILES([
  src/caloric.pc
])
AC_OUTPUT

