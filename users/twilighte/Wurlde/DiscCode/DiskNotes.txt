Wurlde Disk Notes

The established Disk load currently loads 512 bytes per sector with no interrupts
and intended for multiple system booting.
The scheme is fairly simple, load 256 bytes from disk then another 256 bytes from
disk before incrementing the sector up to 18 then increment track until EOF.

However it would be so cool to link this to the music player.

The intended music player for all Wurlde screens will use a dynamic environmental
sound generator that will generate environmental sounds like birdsong, tree rustling
and waves on the fly at 50 or 100Hz.

The intention is that when the end of a screen is reached, the determined track and
sector is requested(SEEK) and then the desg is called to generate the AY register
values to a buffer rather than to the sound chip itself at the maximum speed possible
for a realtime period compliant with the estimated period to load the next screen.
Then the seek command is checked and the load process begins.
As the screen is loaded from disk and at each update of a sector, the buffer
is picked up for the 50hz(or 100Hz) interval and sent directly to the sound chip.

In this way the loading of the screen will not interrupt sound.

There are many hurdles to reach this format..
1) Is each interval of updating the sector a division or equal to 50Hz or 100Hz?
2) Can the desg be written in such a way as it may be called outside of an irq
   to generate the environmental sounds whilst still operating as an irq driven
   process?
3) Can the same scheme be used for Saving?
4) Is their enough time to send up to 14 bytes to the AY whilst updating the sector?
5) Would a 256 Byte buffer be enough to load the 16K from disk?
