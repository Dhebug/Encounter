
	.text


; xx111111
;
; xx011111
; xx100000

_InitializeTables
.(
	lda #<$a000
	sta tmp0+0
	lda #>$a000
	sta tmp0+1

	ldx #0
loop_y
	clc
	lda tmp0+0
	sta _ScreenAddrLow,x
	adc #40
	sta tmp0+0
	lda tmp0+1
	sta _ScreenAddrHigh,x
	adc #0
	sta tmp0+1
	inx
	cpx #200
	bne loop_y

	rts
.)

	.dsb 256-(*&255)
	
_TableModulo6
	.byt 0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5
	.byt 0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5
	.byt 0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5
	.byt 0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5
	.byt 0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5
	.byt 0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3

_TableDivBy6
	.byt 0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,6,7,7,7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,9
	.byt 10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,16,17,17,17,17,17,17,18,18,18,18,18,18,19,19,19,19,19,19
	.byt 20,20,20,20,20,20,21,21,21,21,21,21,22,22,22,22,22,22,23,23,23,23,23,23,24,24,24,24,24,24,25,25,25,25,25,25,26,26,26,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,29,29,29,29,29,29
	.byt 30,30,30,30,30,30,31,31,31,31,31,31,32,32,32,32,32,32,33,33,33,33,33,33,34,34,34,34,34,34,35,35,35,35,35,35,36,36,36,36,36,36,37,37,37,37,37,37,38,38,38,38,38,38,39,39,39,39,39,39
	.byt 40,40,40,40,40,40,41,41,41,41,41,41,42,42,42,42
	;,42,42,43,43,43,43,43,43,44,44,44,44,44,44,45,45,45,45,45,45,46,46,46,46,46,46,47,47,47,47,47,47,48,48,48,48,48,48,49,49,49,49,49,49

_ScreenAddrLow				.dsb 256
_ScreenAddrHigh  			.dsb 256

_EmptySourceScanLine 		.dsb 256			; Only zeroes, can be used for special effects
_EmptyDestinationScanLine 	.dsb 256			; Only zeroes, can be used for special effects

_PictureLoadBufferAddrLow	.dsb 256
_PictureLoadBufferAddrHigh  .dsb 256

_EndDemoData

#echo Remaining space in the demo code:
#print ($9800 - _EndDemoData) 

	.bss 

	*=$400

_BufferPicture1		.dsb 8000
_BufferPicture2		.dsb 8000
_BufferPicture3		.dsb 8000
_BufferPicture4		.dsb 8000


	*=$9800+256

_StdCharset	

	*=$9c00

_Font6x6			.dsb 96*6	; 576 bytes


;	*=$200
;_SectorBuffer

	*=$c000
_MusicLength

;	*=$fc00
;_LoaderCode
