;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by OASIS compiler
; (c) Chema 2016
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; String pack 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 200
res_start
.asc "The Federation looks after us.",0 ; String 0
.asc "Maps available at the info area.",0 ; String 1
.asc "These Federation complexes are...",0 ; String 2
.asc "well, quite complex.",0 ; String 3
.asc "Amiga Wave - Your retro channel.",0 ; String 4
.asc "Every sunday night at 10pm.",0 ; String 5
.asc "No news at the moment.",0 ; String 6
.asc "They always look weird to me.",0 ; String 7
.asc "That's the door to my room.",0 ; String 8
.asc "That's the door to the nursery.",0 ; String 9
.asc "That's the door to the control room.",0 ; String 10
.asc "Cafe-O-matic.",0 ; String 11
.asc "There is only decaf left...",0 ; String 12
.asc "I need a coin first.",0 ; String 13
.asc "I don't know what you want to do.",0 ; String 14
.asc "I don't like decaf, but...",0 ; String 15
.asc "Phew... that was close.",0 ; String 16
.asc "Now it is a matter of time...",0 ; String 17
.asc "Hey! Where are you going?",0 ; String 18
.asc "Can't you read? You can't enter there.",0 ; String 19
.asc "It doesn't accept such small coins.",0 ; String 20
.asc " (Clinck!)",0 ; String 21
.asc " (Clanck!)",0 ; String 22
.asc " (CLINCK!)",0 ; String 23
.asc " (It turns on and asks for selection)",0 ; String 24
.asc "Nothing happens. What did you expect?",0 ; String 25
.asc " ",0 ; String 26
.asc "No need to run the risk again.",0 ; String 27
.asc "This door is closed.",0 ; String 28
.asc "It is on, waiting for selection.",0 ; String 29
.asc "That's a door.",0 ; String 30
res_end
.)

; Object Code 254
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 254
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PUSH
.word (l_Push-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 12
.byt SC_WAIT_FOR_ACTOR
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,3	; nPushMachine
.byt 4
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 29
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_EQ
.byt SF_GETVAL,3	; nPushMachine
.byt 4
.byt SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 64, 254
.byt 45
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 15
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_WALKTO
.byt 0
.byt 60
.byt 13
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_LOOK_DIRECTION
.byt 0
.byt 2
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_DELAY
.byt 10
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_PUT_IN_INVENTORY
.byt 7
.byt SC_ASSIGN, 3	; nPushMachine=5
.byt 5
.byt SC_SETFLAG, 16	; bCoinStuck=false
.byt 0
.byt SC_SAVEGAME
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 64, 254
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 6
.byt 21
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 14
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_IS_OBJINVENTORY
.byt 6
.byt 12
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 20
.byt SC_JUMP_REL, 7
; else part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 13
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Push
.byt SC_CURSOR_ON
.byt 0
.byt SC_ASSIGN, 64, 200	; tmpanimstate=sfGetAnimstate(0)
.byt SF_GET_ANIMSTATE
.byt 0
.byt SC_SET_ANIMSTATE
.byt 0
.byt 3
.byt SC_DELAY
.byt 10
.byt SC_SET_ANIMSTATE
.byt 0
.byt SF_GETVAL,64, 200	; tmpanimstate
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_LT
.byt SF_GETVAL,3	; nPushMachine
.byt 4
.byt SF_GETFLAG,16	; bCoinStuck
.byt 40
; then part
.byt SC_PRINT
.byt 64, 200
.byt SF_ADD
.byt 21
.byt SF_GETVAL,3	; nPushMachine
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,3	; nPushMachine
.byt 3
.byt 9
; then part
.byt SC_DELAY
.byt 20
.byt SC_ASSIGN, 3	; nPushMachine=nPushMachine+1
.byt SF_ADD
.byt SF_GETVAL,3	; nPushMachine
.byt 1
.byt SC_DELAY
.byt 50
.byt SC_PRINT
.byt 64, 200
.byt 26
.byt SC_JUMP_REL, 9
; else part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 25
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 200
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 200
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 201
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 201
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 202
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 202
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 203
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 203
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 1
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 3
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 2
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 3
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,0	; bReadMapPoster
.byt 10
; then part
.byt SC_SETFLAG, 0	; bReadMapPoster=true
.byt 1
.byt SC_SAVEGAME
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 204
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 204
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 4
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 205
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 205
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,4	; nMsgInfo
.byt 16
.byt 21
; then part
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 6
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_JUMP_REL, 64, 86
; else part
.byt SC_CURSOR_ON
.byt 0
.byt SC_FREEZE_ALL_SCRIPTS
.byt 1
.byt SC_CLEAR_ROOMAREA
.byt SC_SET_OVERRIDE
.word (l_read-res_start)
.byt SC_PRINT_AT
.byt 64, 210
.byt 0
.byt 6
.byt 24
.byt SC_PRINT_AT
.byt 64, 210
.byt 1
.byt 6
.byt 32
.byt SC_PRINT_AT
.byt 64, 210
.byt SF_ADD
.byt SF_GETVAL,4	; nMsgInfo
.byt 2
.byt 6
.byt 40
.byt SC_PRINT_AT
.byt 64, 210
.byt SF_ADD
.byt SF_GETVAL,4	; nMsgInfo
.byt 3
.byt 6
.byt 49
.byt SC_PRINT_AT
.byt 64, 210
.byt SF_ADD
.byt SF_GETVAL,4	; nMsgInfo
.byt 4
.byt 6
.byt 58
.byt SC_PRINT_AT
.byt 64, 210
.byt SF_ADD
.byt SF_GETVAL,4	; nMsgInfo
.byt 5
.byt 6
.byt 64, 67
.byt SC_ASSIGN, 4	; nMsgInfo=nMsgInfo+4
.byt SF_ADD
.byt SF_GETVAL,4	; nMsgInfo
.byt 4
.byt SC_DELAY
.byt 64, 100
.byt SC_DELAY
.byt 64, 100
.byt SC_DELAY
.byt 64, 100
.byt SC_DELAY
.byt 64, 100
.byt SC_DELAY
.byt 64, 100
l_read
.byt SC_REDRAW_SCREEN
.byt SC_FREEZE_ALL_SCRIPTS
.byt 0
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 206
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 206
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; actor
.byt 64, 200
.byt 7
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 220
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 220
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 6
.byt 14
.byt 45
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 1
.byt SC_CHANGE_ROOM_AND_STOP
.byt 6
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 221
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 221
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 4
.byt 9
.byt 36
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 0
.byt SC_CHANGE_ROOM_AND_STOP
.byt 4
.byt SC_STOP_SCRIPT
res_end
.)

; Script 200
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 200
res_start
+script_200_start
.byt SC_ASSIGN, 0	; tmpParam1=200
.byt 64, 200
.byt SC_CLEAR_EVENTS
.byt 1
.byt SC_SPAWN_SCRIPT
.byt 64, 201
.byt SC_WAIT_EVENT
.byt 1
.byt SC_ASSIGN, 0	; tmpParam1=201
.byt 64, 201
.byt SC_CLEAR_EVENTS
.byt 1
.byt SC_SPAWN_SCRIPT
.byt 64, 201
.byt SC_WAIT_EVENT
.byt 1
.byt SC_ASSIGN, 0	; tmpParam1=202
.byt 64, 202
.byt SC_CLEAR_EVENTS
.byt 1
.byt SC_SPAWN_SCRIPT
.byt 64, 201
.byt SC_WAIT_EVENT
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,9	; bEscapeFromNurse
.byt 15
; then part
.byt SC_SETFLAG, 9	; bEscapeFromNurse=false
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 16
.byt SC_WAIT_FOR_ACTOR
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,12	; bAutoExit
.byt 10
; then part
.byt SC_SETFLAG, 12	; bAutoExit=false
.byt 0
.byt SC_CURSOR_ON
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,14	; bSandwichGiven
.byt 16
; then part
.byt SC_SPAWN_SCRIPT
.byt 64, 203
.byt SC_SETFLAG, 14	; bSandwichGiven=false
.byt 0
.byt SC_SETFLAG, 15	; bTechcamOut=true
.byt 1
.byt SC_JUMP_REL, 11
; else part
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,13	; bGuardWentForCoffee
.byt 9
; then part
.byt SC_SPAWN_SCRIPT
.byt 64, 202
.byt SC_SPAWN_SCRIPT
.byt 64, 210
.byt SC_STOP_SCRIPT
res_end
.)

; Script 201
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 201
res_start
+script_201_start
.byt SC_ASSIGN, 64, 200	; CameraID=tmpParam1
.byt SF_GETVAL,0	; tmpParam1
.byt SC_SET_EVENTS
.byt 1
.byt SC_ASSIGN, 64, 202	; cc=sfGetCol(CameraID)
.byt SF_GET_COL
.byt SF_GETVAL,64, 200	; CameraID
l_loop
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 64, 80
.byt 64, 110
.byt SC_ASSIGN, 64, 201	; bc=sfGetCol(0)
.byt SF_GET_COL
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_AND
.byt SF_GT
.byt SF_GETVAL,64, 201	; bc
.byt SF_GETVAL,64, 202	; cc
.byt SF_LT
.byt SF_SUB
.byt SF_GETVAL,64, 201	; bc
.byt SF_GETVAL,64, 202	; cc
.byt 20
.byt SF_AND
.byt SF_LT
.byt SF_GETVAL,64, 201	; bc
.byt SF_GETVAL,64, 202	; cc
.byt SF_LT
.byt SF_SUB
.byt SF_GETVAL,64, 202	; cc
.byt SF_GETVAL,64, 201	; bc
.byt 20
.byt 40
; then part
.byt SC_PLAYSFX
.byt 17
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; CameraID
.byt 1
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; CameraID
.byt 2
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; CameraID
.byt 3
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 64, 80
.byt 64, 110
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_AND
.byt SF_GT
.byt SF_GETVAL,64, 201	; bc
.byt SF_GETVAL,64, 202	; cc
.byt SF_LT
.byt SF_SUB
.byt SF_GETVAL,64, 201	; bc
.byt SF_GETVAL,64, 202	; cc
.byt 20
.byt SF_AND
.byt SF_LT
.byt SF_GETVAL,64, 201	; bc
.byt SF_GETVAL,64, 202	; cc
.byt SF_LT
.byt SF_SUB
.byt SF_GETVAL,64, 202	; cc
.byt SF_GETVAL,64, 201	; bc
.byt 20
.byt 40
; then part
.byt SC_PLAYSFX
.byt 17
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; CameraID
.byt 2
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; CameraID
.byt 1
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; CameraID
.byt 0
.byt SC_JUMP
.word (l_loop-res_start)
.byt SC_STOP_SCRIPT
res_end
.)

; Script 202
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 202
res_start
+script_202_start
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 64, 150
.byt 64, 250
.byt SC_LOOK_DIRECTION
.byt 2
.byt 3
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 64, 150
.byt 64, 250
.byt SC_LOOK_DIRECTION
.byt 2
.byt 1
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 64, 150
.byt 64, 250
.byt SC_LOOK_DIRECTION
.byt 2
.byt 3
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 64, 150
.byt 64, 250
.byt SC_LOOK_DIRECTION
.byt 2
.byt 0
.byt SC_RESTART_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Script 203
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 203
res_start
+script_203_start
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_WALKTO
.byt 0
.byt 64, 101
.byt 15
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_LOOK_DIRECTION
.byt 0
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 17
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_RUN_OBJECT_CODE
.byt 3
.byt 64, 211
.byt 64, 255
.byt SC_DELAY
.byt 5
.byt SC_SET_OBJECT_POS
.byt 10
.byt 3
.byt 12
.byt 64, 118
.byt SC_ACTOR_WALKTO
.byt 10
.byt 64, 118
.byt 13
.byt SC_RUN_OBJECT_CODE
.byt 6
.byt 64, 211
.byt 64, 255
.byt SC_WAIT_FOR_ACTOR
.byt 10
.byt SC_LOOK_DIRECTION
.byt 10
.byt 0
.byt SC_DELAY
.byt 3
.byt SC_LOOK_DIRECTION
.byt 10
.byt 1
.byt SC_DELAY
.byt 3
.byt SC_LOOK_DIRECTION
.byt 10
.byt 0
.byt SC_SET_OBJECT_POS
.byt 2
.byt 3
.byt 14
.byt 64, 127
.byt SC_ACTOR_WALKTO
.byt 2
.byt 64, 111
.byt 12
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_LOOK_DIRECTION
.byt 2
.byt 0
.byt SC_LOOK_DIRECTION
.byt 10
.byt 1
.byt SC_ACTOR_TALK
.byt 10
.byt 64, 201
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt 10
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=1
.byt 1
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LT
.byt SF_GETVAL,64, 200	; i
.byt 7
.word 120
; for body
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 201
.byt SF_GETVAL,64, 200	; i
.byt SC_WAIT_FOR_ACTOR
.byt 2
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 91, 0	; jump to 91
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=7
.byt 7
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LT
.byt SF_GETVAL,64, 200	; i
.byt 11
.word 153
; for body
.byt SC_ACTOR_TALK
.byt 10
.byt 64, 201
.byt SF_GETVAL,64, 200	; i
.byt SC_WAIT_FOR_ACTOR
.byt 10
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 124, 0	; jump to 124
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 201
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_ACTOR_WALKTO
.byt 10
.byt 64, 70
.byt 14
.byt SC_EXECUTE_ACTION
.byt 2
.byt 2
.byt 64, 211
.byt 64, 255
.byt SC_WAIT_FOR_ACTOR
.byt 10
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_SET_OBJECT_POS
.byt 2
.byt 10
.byt 12
.byt 9
.byt SC_LOOK_DIRECTION
.byt 2
.byt 0
.byt SC_SETFLAG, 17	; bGuardInCtrlRoom=true
.byt 1
.byt SC_REMOVE_OBJECT
.byt 10
.byt SC_RUN_OBJECT_CODE
.byt 6
.byt 64, 211
.byt 64, 255
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 201
.byt 12
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_SETFLAG, 16	; bCoinStuck=true
.byt 1
.byt SC_SAVEGAME
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; String pack 201
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 201
res_start
.asc "Where were you?",0 ; String 0
.asc "Sorry, sir.",0 ; String 1
.asc "It is difficult to find a coffee.",0 ; String 2
.asc "The machine has only decaf left.",0 ; String 3
.asc "And even so, the coin of a woman",0 ; String 4
.asc "just got stuck inside...",0 ; String 5
.asc "I had to go to Level 3.",0 ; String 6
.asc "Okay, okay... Listen...",0 ; String 7
.asc "I have an urgency - oh my stomach!",0 ; String 8
.asc "Just keep an eye on the equipment",0 ; String 9
.asc "Argh, I feel horrible!",0 ; String 10
.asc "Of course, sir!",0 ; String 11
.asc "Damn!....",0 ; String 12
res_end
.)

; Script 250
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 250
res_start
+script_250_start
.byt SC_ASSIGN, 64, 200	; door=tmpParam1
.byt SF_GETVAL,0	; tmpParam1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_COSTID
.byt SF_GETVAL,64, 200	; door
.byt 64, 255
.byt 12
; then part
.byt SC_STOP_SCRIPT
.byt SC_SPAWN_SCRIPT
.byt 64, 252
.byt SC_BREAK_HERE
.byt SC_PLAYSFX
.byt 3
.byt SC_SET_COSTUME
.byt SF_GETVAL,64, 200	; door
.byt 64, 202
.byt 0
.byt SC_SET_COSTUME
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 64, 202
.byt 0
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt SC_SET_ANIMSTATE
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 4
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; door
.byt 2
.byt SC_SET_ANIMSTATE
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 5
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; door
.byt 3
.byt SC_SET_ANIMSTATE
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 6
.byt SC_STOP_SCRIPT
res_end
.)

; Script 251
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 251
res_start
+script_251_start
.byt SC_ASSIGN, 64, 200	; door=tmpParam1
.byt SF_GETVAL,0	; tmpParam1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ANIMSTATE
.byt SF_GETVAL,64, 200	; door
.byt 3
.byt 11
; then part
.byt SC_STOP_SCRIPT
.byt SC_PLAYSFX
.byt 3
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; door
.byt 2
.byt SC_SET_ANIMSTATE
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 5
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt SC_SET_ANIMSTATE
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 4
.byt SC_DELAY
.byt 5
.byt SC_SET_ANIMSTATE
.byt SF_GETVAL,64, 200	; door
.byt 0
.byt SC_SET_ANIMSTATE
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 0
.byt SC_BREAK_HERE
.byt SC_SET_COSTUME
.byt SF_GETVAL,64, 200	; door
.byt 64, 255
.byt 0
.byt SC_SET_COSTUME
.byt SF_ADD
.byt SF_GETVAL,64, 200	; door
.byt 1
.byt 64, 255
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; Script 252
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 252
res_start
+script_252_start
.byt SC_ASSIGN, 64, 200	; door=tmpParam1
.byt SF_GETVAL,0	; tmpParam1
.byt SC_DELAY
.byt 64, 200
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_COSTID
.byt SF_GETVAL,64, 200	; door
.byt 64, 255
.byt 19
; then part
.byt SC_ASSIGN, 0	; tmpParam1=door
.byt SF_GETVAL,64, 200	; door
.byt SC_CHAIN_SCRIPT
.byt 64, 251
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 207
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 207
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_CLOSE
.word (l_Close-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 8
.byt SC_STOP_SCRIPT
l_Open
.byt SC_ASSIGN, 0	; tmpParam1=207
.byt 64, 207
.byt SC_CHAIN_SCRIPT
.byt 64, 250
.byt SC_STOP_SCRIPT
l_Close
.byt SC_ASSIGN, 0	; tmpParam1=207
.byt 64, 207
.byt SC_CHAIN_SCRIPT
.byt 64, 251
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_WalkTo
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 10
; then part
.byt SC_CURSOR_ON
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_EQ
.byt SF_GET_COSTID
.byt 64, 207
.byt 64, 255
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 207
.byt 0
.byt 21
; then part
.byt SC_RUN_OBJECT_CODE
.byt 3
.byt 64, 207
.byt 64, 255
.byt SC_SET_WBASWALKABLE
.byt 3
.byt 1
.byt SC_ACTOR_WALKTO
.byt SF_GETVAL,64, 200	; actor
.byt 6
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 2
.byt 14
.byt 11
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 3
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 12
; then part
.byt SC_CURSOR_ON
.byt 1
.byt SC_CHANGE_ROOM_AND_STOP
.byt 2
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 209
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 209
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_CLOSE
.word (l_Close-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 9
.byt SC_STOP_SCRIPT
l_Open
.byt SC_ASSIGN, 0	; tmpParam1=209
.byt 64, 209
.byt SC_CHAIN_SCRIPT
.byt 64, 250
.byt SC_STOP_SCRIPT
l_Close
.byt SC_ASSIGN, 0	; tmpParam1=209
.byt 64, 209
.byt SC_CHAIN_SCRIPT
.byt 64, 251
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_WalkTo
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 10
; then part
.byt SC_CURSOR_ON
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_EQ
.byt SF_GET_COSTID
.byt 64, 209
.byt 64, 255
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 209
.byt 0
.byt 21
; then part
.byt SC_RUN_OBJECT_CODE
.byt 3
.byt 64, 209
.byt 64, 255
.byt SC_SET_WBASWALKABLE
.byt 5
.byt 1
.byt SC_ACTOR_WALKTO
.byt SF_GETVAL,64, 200	; actor
.byt 64, 72
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 9
.byt 15
.byt 11
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 2
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 12
; then part
.byt SC_CURSOR_ON
.byt 1
.byt SC_CHANGE_ROOM_AND_STOP
.byt 9
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 211
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 211
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_CLOSE
.word (l_Close-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 10
.byt SC_STOP_SCRIPT
l_Open
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_EQ
.byt SF_GET_ACTIONACTOR
.byt 0
.byt SF_NOT
.byt SF_GETFLAG,13	; bGuardWentForCoffee
.byt 13
; then part
.byt SC_JUMP
.word (l_forbid-res_start)
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,20	; bCamDeactivated
.byt 8
; then part
.byt SC_JUMP
.word (l_notagain-res_start)
.byt SC_ASSIGN, 0	; tmpParam1=211
.byt 64, 211
.byt SC_CHAIN_SCRIPT
.byt 64, 250
.byt SC_STOP_SCRIPT
l_Close
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_EQ
.byt SF_GET_ACTIONACTOR
.byt 0
.byt SF_NOT
.byt SF_GETFLAG,13	; bGuardWentForCoffee
.byt 13
; then part
.byt SC_JUMP
.word (l_forbid-res_start)
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,20	; bCamDeactivated
.byt 8
; then part
.byt SC_JUMP
.word (l_notagain-res_start)
.byt SC_ASSIGN, 0	; tmpParam1=211
.byt 64, 211
.byt SC_CHAIN_SCRIPT
.byt 64, 251
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_WalkTo
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_EQ
.byt SF_GET_ACTIONACTOR
.byt 0
.byt SF_NOT
.byt SF_GETFLAG,13	; bGuardWentForCoffee
.byt 13
; then part
.byt SC_JUMP
.word (l_forbid-res_start)
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,20	; bCamDeactivated
.byt 8
; then part
.byt SC_JUMP
.word (l_notagain-res_start)
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 10
; then part
.byt SC_CURSOR_ON
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_EQ
.byt SF_GET_COSTID
.byt 64, 211
.byt 64, 255
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 211
.byt 0
.byt 21
; then part
.byt SC_RUN_OBJECT_CODE
.byt 3
.byt 64, 211
.byt 64, 255
.byt SC_SET_WBASWALKABLE
.byt 7
.byt 1
.byt SC_DELAY
.byt 20
.byt SC_ACTOR_WALKTO
.byt SF_GETVAL,64, 200	; actor
.byt 64, 118
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 10
.byt 15
.byt 3
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 12
; then part
.byt SC_CURSOR_ON
.byt 1
.byt SC_CHANGE_ROOM_AND_STOP
.byt 10
.byt SC_STOP_SCRIPT
l_forbid
.byt SC_CURSOR_ON
.byt 0
.byt SC_FREEZE_SCRIPT
.byt 64, 202
.byt 1
.byt SC_LOOK_DIRECTION
.byt 2
.byt 0
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 200
.byt 18
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 200
.byt 19
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_LOOK_DIRECTION
.byt 0
.byt 1
.byt SC_CURSOR_ON
.byt 1
.byt SC_FREEZE_SCRIPT
.byt 64, 202
.byt 0
.byt SC_STOP_SCRIPT
l_notagain
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 27
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 213
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 213
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_CLOSE
.word (l_Close-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 30
.byt SC_STOP_SCRIPT
l_Open
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,3	; bMapContactGiven
.byt 9
; then part
.byt SC_JUMP
.word (l_doorclosed-res_start)
.byt SC_ASSIGN, 0	; tmpParam1=213
.byt 64, 213
.byt SC_CHAIN_SCRIPT
.byt 64, 250
.byt SC_STOP_SCRIPT
l_Close
.byt SC_ASSIGN, 0	; tmpParam1=213
.byt 64, 213
.byt SC_CHAIN_SCRIPT
.byt 64, 251
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_WalkTo
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,3	; bMapContactGiven
.byt 9
; then part
.byt SC_JUMP
.word (l_doorclosed-res_start)
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 10
; then part
.byt SC_CURSOR_ON
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_EQ
.byt SF_GET_COSTID
.byt 64, 213
.byt 64, 255
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 213
.byt 0
.byt 21
; then part
.byt SC_RUN_OBJECT_CODE
.byt 3
.byt 64, 213
.byt 64, 255
.byt SC_SET_WBASWALKABLE
.byt 6
.byt 1
.byt SC_ACTOR_WALKTO
.byt SF_GETVAL,64, 200	; actor
.byt 64, 95
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 5
.byt 15
.byt 11
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 2
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 12
; then part
.byt SC_CURSOR_ON
.byt 1
.byt SC_CHANGE_ROOM_AND_STOP
.byt 5
.byt SC_STOP_SCRIPT
l_doorclosed
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 28
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 215
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 215
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_CLOSE
.word (l_Close-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 30
.byt SC_STOP_SCRIPT
l_Open
.byt SC_ASSIGN, 0	; tmpParam1=215
.byt 64, 215
.byt SC_CHAIN_SCRIPT
.byt 64, 250
.byt SC_STOP_SCRIPT
l_Close
.byt SC_ASSIGN, 0	; tmpParam1=215
.byt 64, 215
.byt SC_CHAIN_SCRIPT
.byt 64, 251
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_WalkTo
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 10
; then part
.byt SC_CURSOR_ON
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_EQ
.byt SF_GET_COSTID
.byt 64, 215
.byt 64, 255
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 215
.byt 0
.byt 21
; then part
.byt SC_RUN_OBJECT_CODE
.byt 3
.byt 64, 215
.byt 64, 255
.byt SC_SET_WBASWALKABLE
.byt 4
.byt 1
.byt SC_ACTOR_WALKTO
.byt SF_GETVAL,64, 200	; actor
.byt 28
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; actor
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 13
.byt 15
.byt 11
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 2
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 12
; then part
.byt SC_CURSOR_ON
.byt 1
.byt SC_CHANGE_ROOM_AND_STOP
.byt 13
.byt SC_STOP_SCRIPT
res_end
.)

; String pack 210
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 210
res_start
.asc "     BREAKING NEWS",0 ; String 0
.asc "     -------------",0 ; String 1
.asc "",A_FWGREEN,"Scientists report a decrease of .5 in",0 ; String 2
.asc "",A_FWGREEN,"the air toxics in the last quarter.",0 ; String 3
.asc "",A_FWGREEN,"Though the air is still deadly, our",0 ; String 4
.asc "",A_FWGREEN,"work is producing excellent results.",0 ; String 5
.asc "",A_FWGREEN,"Three more couples have been granted",0 ; String 6
.asc "",A_FWGREEN,"permission for procreation in this ",0 ; String 7
.asc "",A_FWGREEN,"year's call. Send applications to the",0 ; String 8
.asc "",A_FWGREEN,"Population Control Agency.",0 ; String 9
.asc "",A_FWGREEN,"The Federation has approved a plan to",0 ; String 10
.asc "",A_FWGREEN,"invest 200 billion credits in the",0 ; String 11
.asc "",A_FWGREEN,"Main Computer Control Facility here",0 ; String 12
.asc "",A_FWGREEN,"on planet Earth.",0 ; String 13
.asc "",A_FWGREEN,"A new communication station has been",0 ; String 14
.asc "",A_FWGREEN,"deployed in planet Saurian Major.",0 ; String 15
.asc "",A_FWGREEN,"Experts say it will greatly improve",0 ; String 16
.asc "",A_FWGREEN,"communications between star systems.",0 ; String 17
.asc "",A_FWGREEN,"Planet Auron has finally decided to",0 ; String 18
.asc "",A_FWGREEN,"join the Terran Federation despite",0 ; String 19
.asc "",A_FWGREEN,"their previous stubborn government.",0 ; String 20
.asc "",A_FWGREEN,"Congratulations to the citizens!",0 ; String 21
res_end
.)

; Script 210
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 210
res_start
+script_210_start
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 64, 100
.byt 64, 150
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=1
.byt 1
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LE
.byt SF_GETVAL,64, 200	; i
.byt 5
.word 55
; for body
.byt SC_SET_ANIMSTATE
.byt 64, 205
.byt 0
.byt SC_DELAY
.byt 20
.byt SC_SET_ANIMSTATE
.byt 64, 205
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_GE
.byt SF_GET_CAMERACOL
.byt 36
.byt SF_LE
.byt SF_GET_CAMERACOL
.byt 64, 74
.byt 13
; then part
.byt SC_PLAYSFX
.byt 15
.byt SC_DELAY
.byt 20
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 10, 0	; jump to 10
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=2
.byt 2
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LT
.byt SF_GETVAL,64, 200	; i
.byt 10
.word 87
; for body
.byt SC_SET_ANIMSTATE
.byt 64, 205
.byt SF_GETVAL,64, 200	; i
.byt SC_DELAY
.byt 10
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 59, 0	; jump to 59
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=1
.byt 1
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LE
.byt SF_GETVAL,64, 200	; i
.byt 5
.word 123
; for body
.byt SC_SET_ANIMSTATE
.byt 64, 205
.byt 10
.byt SC_DELAY
.byt 20
.byt SC_SET_ANIMSTATE
.byt 64, 205
.byt 9
.byt SC_DELAY
.byt 20
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 91, 0	; jump to 91
.byt SC_SET_ANIMSTATE
.byt 64, 205
.byt 0
.byt SC_RESTART_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)
