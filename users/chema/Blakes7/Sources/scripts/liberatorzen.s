;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by OASIS compiler
; (c) Chema 2016
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Script 200
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 200
res_start
+script_200_start
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,0	; tmpParam1
.byt 1
.byt 14
; then part
.byt SC_EXECUTE_ACTION
.byt SF_GET_ACTIONACTOR
.byt 9
.byt 64, 201
.byt 64, 255
.byt SC_SPAWN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 200
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 200
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_SET_OBJECT_POS
.byt SF_GET_ACTIONACTOR
.byt 22
.byt 11
.byt 43
.byt SC_LOOK_DIRECTION
.byt SF_GET_ACTIONACTOR
.byt 0
.byt SC_CHANGE_ROOM_AND_STOP
.byt 22
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 201
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 201
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_SET_OBJECT_POS
.byt SF_GET_ACTIONACTOR
.byt 24
.byt 10
.byt 23
.byt SC_LOOK_DIRECTION
.byt SF_GET_ACTIONACTOR
.byt 3
.byt SC_CHANGE_ROOM_AND_STOP
.byt 24
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 204
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 204
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 14
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 15
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
l_Use
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; a
.byt 0
.byt 20
; then part
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 16
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 29
.byt 52
; then part
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 17
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 18
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 19
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_CURSOR_ON
.byt 1
.byt SC_SETFLAG, 64, 74	; bTransmitterInstalled=true
.byt 1
.byt SC_REMOVE_FROM_INVENTORY
.byt 29
.byt SC_SAVEGAME
.byt SC_JUMP_REL, 13
; else part
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 20
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 202
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 202
res_start
; Response table
.byt VERB_TALKTO
.word (l_TalkTo-res_start)
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_TalkTo
.byt SC_CURSOR_ON
.byt 0
.byt SC_LOAD_DIALOG
.byt 64, 200
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_EGO
.byt 22
.byt 9
; then part
.byt SC_ACTIVATE_DLGOPT
.byt 2
.byt 1
.byt SC_START_DIALOG
.byt SC_STOP_SCRIPT
l_LookAt
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 21
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_STOP_SCRIPT
res_end
.)

; Script 201
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 201
res_start
+script_201_start
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 20
.byt 64, 70
.byt SC_PLAYSFX
.byt 15
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 202
.byt 0
.byt 14
; then part
.byt SC_ASSIGN, 64, 200	; a=1
.byt 1
.byt SC_JUMP_REL, 6
; else part
.byt SC_ASSIGN, 64, 200	; a=0
.byt 0
.byt SC_SET_ANIMSTATE
.byt 64, 202
.byt SF_GETVAL,64, 200	; a
.byt SC_SET_ANIMSTATE
.byt 64, 203
.byt SF_GETVAL,64, 200	; a
.byt SC_RESTART_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Script 202
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 202
res_start
+script_202_start
.byt SC_ASSIGN, 64, 202	; s=tmpParam1
.byt SF_GETVAL,0	; tmpParam1
.byt SC_FREEZE_SCRIPT
.byt 64, 201
.byt 1
.byt SC_ASSIGN, 64, 201	; a=sfGetAnimstate(202)
.byt SF_GET_ANIMSTATE
.byt 64, 202
.byt SC_PRINT
.byt 64, 200
.byt SF_GETVAL,64, 202	; s
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=0
.byt 0
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LT
.byt SF_GETVAL,64, 200	; i
.byt 10
.word 79
; for body
.byt SC_SET_ANIMSTATE
.byt 64, 202
.byt SF_ADD
.byt SF_GETVAL,64, 201	; a
.byt 2
.byt SC_SET_ANIMSTATE
.byt 64, 203
.byt SF_ADD
.byt SF_GETVAL,64, 201	; a
.byt 2
.byt SC_DELAY
.byt SF_GETRANDINT
.byt 5
.byt 15
.byt SC_SET_ANIMSTATE
.byt 64, 202
.byt SF_GETVAL,64, 201	; a
.byt SC_SET_ANIMSTATE
.byt 64, 203
.byt SF_GETVAL,64, 201	; a
.byt SC_DELAY
.byt 5
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 25, 0	; jump to 25
.byt SC_PRINT
.byt 64, 200
.byt 0
.byt SC_FREEZE_SCRIPT
.byt 64, 201
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; String pack 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 200
res_start
.asc " ",0 ; String 0
.asc " Los sistemas funcionan normalmente.",0 ; String 1
.asc " No se detectan naves en rango.",0 ; String 2
.asc " La unidad de teletransporte es",0 ; String 3
.asc " independiente de mis funciones.",0 ; String 4
.asc " Puedo controlar la climatizaci",94,"n.",0 ; String 5
.asc " Los sensores detectan dos naves",0 ; String 6
.asc " apareciendo sobre el horizonte.",0 ; String 7
.asc " Los datos disponibles los clasifican",0 ; String 8
.asc " como naves de persecuci",94,"n.",0 ; String 9
.asc " Confirmado.",0 ; String 10
.asc " La estimaci",94,"n ser",93,"a de 2.5 contra 3",0 ; String 11
.asc " de sobrevivir durante el primer a",35,"o.",0 ; String 12
.asc " Indique rumbo y velocidad, por favor.",0 ; String 13
.asc "Estos controles son parte de los",0 ; String 14
.asc "sistemas de Zen.",0 ; String 15
.asc "",126,"C",94,"mo voy a usarlos?",0 ; String 16
.asc "Buena idea. Conectar",92," el transmisor",0 ; String 17
.asc "al indicador del sistema de aire.",0 ; String 18
.asc "acondicionado.",0 ; String 19
.asc "No puedo hacer eso.",0 ; String 20
.asc "Este es Zen: La IA del Libertador.",0 ; String 21
res_end
.)

; Dialog 200
.(
.byt RESOURCE_DIALOG|$80
.word (res_end-res_start +4)
.byt 200
res_start
.byt 220	; Stringpack with options
.byt 220	; Script with response actions
.byt 1,1,0,1,$ff	; Active flags
.word (l_systems-script_220_start),(l_sensors-script_220_start),(l_teleport-script_220_start),(l_bye-script_220_start)	; Jump labels
res_end
.)
; String pack for dialog 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 220
res_start
.asc "Zen, informe de todos los sistemas.",0 ; String 0
.asc "Zen, escaneo completo.",0 ; String 1
.asc "Zen, ",126,"puedes operar el teletransporte?",0 ; String 2
.asc "Eso es todo, Zen.",0 ; String 3
res_end
.)

; Script 220
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 220
res_start
+script_220_start
+l_systems
.byt SC_ACTIVATE_DLGOPT
.byt 0
.byt 0
.byt SC_ASSIGN, 0	; tmpParam1=1
.byt 1
.byt SC_JUMP
.word (l_common-res_start)
+l_sensors
.byt SC_ACTIVATE_DLGOPT
.byt 1
.byt 0
.byt SC_ASSIGN, 0	; tmpParam1=2
.byt 2
.byt SC_JUMP
.word (l_common-res_start)
+l_teleport
.byt SC_ACTIVATE_DLGOPT
.byt 2
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt SF_GET_ACTIONACTOR
.byt SC_ASSIGN, 0	; tmpParam1=3
.byt 3
.byt SC_CHAIN_SCRIPT
.byt 64, 202
.byt SC_ASSIGN, 0	; tmpParam1=4
.byt 4
.byt SC_CHAIN_SCRIPT
.byt 64, 202
.byt SC_DELAY
.byt 50
.byt SC_ASSIGN, 0	; tmpParam1=5
.byt 5
.byt SC_CHAIN_SCRIPT
.byt 64, 202
.byt SC_START_DIALOG
.byt SC_STOP_SCRIPT
l_common
.byt SC_WAIT_FOR_ACTOR
.byt SF_GET_ACTIONACTOR
.byt SC_CHAIN_SCRIPT
.byt 64, 202
.byt SC_START_DIALOG
.byt SC_STOP_SCRIPT
+l_bye
.byt SC_WAIT_FOR_ACTOR
.byt SF_GET_ACTIONACTOR
l_end
.byt SC_END_DIALOG
.byt SC_STOP_SCRIPT
res_end
.)
