;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by OASIS compiler
; (c) Chema 2016
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Script 200
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 200
res_start
+script_200_start
.byt SC_FOLLOW_ACTOR
.byt 64, 255
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ROOM
.byt 20
.byt 42
.byt 41
; then part
.byt SC_SET_OBJECT_POS
.byt 20
.byt 43
.byt 16
.byt 17
.byt SC_LOOK_DIRECTION
.byt 20
.byt 1
.byt SC_CURSOR_ON
.byt 0
.byt SC_BREAK_HERE
.byt SC_ACTOR_TALK
.byt 20
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 20
.byt SC_ACTOR_TALK
.byt 20
.byt 64, 200
.byt 6
.byt SC_WAIT_FOR_ACTOR
.byt 20
.byt SC_ACTOR_TALK
.byt 20
.byt 64, 200
.byt 12
.byt SC_WAIT_FOR_ACTOR
.byt 20
.byt SC_CURSOR_ON
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,56	; bDoorPuzzleDone
.byt 8
; then part
.byt SC_SET_CAMERA_AT
.byt 64, 120
.byt SC_STOP_SCRIPT
res_end
.)

; Script 201
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 201
res_start
+script_201_start
.byt SC_FOLLOW_ACTOR
.byt SF_GET_EGO
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 200
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 200
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_SET_OBJECT_POS
.byt SF_GET_ACTIONACTOR
.byt 42
.byt 13
.byt 37
.byt SC_LOOK_DIRECTION
.byt SF_GET_ACTIONACTOR
.byt 1
.byt SC_CHANGE_ROOM_AND_STOP
.byt 42
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 201
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 201
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 0
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 52
.byt 20
; then part
.byt SC_SETFLAG, 51	; bCellPlaced=true
.byt 1
.byt SC_REMOVE_FROM_INVENTORY
.byt 52
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 13
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_SAVEGAME
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,56	; bDoorPuzzleDone
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt SF_GET_ACTIONACTOR
.byt SC_JUMP_REL, 5
; else part
.byt SC_LOAD_ROOM
.byt 64, 200
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 202
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 202
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 204
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 204
res_start
; Response table
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_Use
l_WalkTo
.byt SC_SET_OBJECT_POS
.byt SF_GET_EGO
.byt 44
.byt 15
.byt 17
.byt SC_LOOK_DIRECTION
.byt SF_GET_EGO
.byt 2
.byt SC_LOAD_ROOM
.byt 44
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 203
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 203
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 2
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Script 210
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 210
res_start
+script_210_start
.byt SC_SET_ANIMSTATE
.byt 64, 210
.byt 1
.byt SC_SET_ANIMSTATE
.byt 64, 211
.byt 3
.byt SC_SET_ANIMSTATE
.byt 64, 212
.byt 5
.byt SC_SET_ANIMSTATE
.byt 64, 213
.byt 7
.byt SC_SETFLAG, 52	; bLed1On=false
.byt 0
.byt SC_SETFLAG, 53	; bLed2On=false
.byt 0
.byt SC_SETFLAG, 54	; bLed3On=false
.byt 0
.byt SC_SETFLAG, 55	; bLed4On=false
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,51	; bCellPlaced
.byt 10
; then part
.byt SC_LOAD_OBJECT
.byt 64, 224
.byt SC_JUMP_REL, 8
; else part
.byt SC_CURSOR_ON
.byt 0
.byt SC_SPAWN_SCRIPT
.byt 64, 231
.byt SC_STOP_SCRIPT
.byt SC_DISABLE_VERB
.byt 0
.byt 1
.byt SC_DISABLE_VERB
.byt 1
.byt 1
.byt SC_DISABLE_VERB
.byt 2
.byt 1
.byt SC_DISABLE_VERB
.byt 3
.byt 1
.byt SC_DISABLE_VERB
.byt 4
.byt 1
.byt SC_DISABLE_VERB
.byt 6
.byt 1
.byt SC_DISABLE_VERB
.byt 7
.byt 1
.byt SC_SPAWN_SCRIPT
.byt 64, 230
.byt SC_STOP_SCRIPT
res_end
.)

; Script 211
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 211
res_start
+script_211_start
.byt SC_DISABLE_VERB
.byt 0
.byt 0
.byt SC_DISABLE_VERB
.byt 1
.byt 0
.byt SC_DISABLE_VERB
.byt 2
.byt 0
.byt SC_DISABLE_VERB
.byt 3
.byt 0
.byt SC_DISABLE_VERB
.byt 4
.byt 0
.byt SC_DISABLE_VERB
.byt 6
.byt 0
.byt SC_DISABLE_VERB
.byt 7
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 210
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 210
res_start
; Response table
.byt VERB_PUSH
.word (l_Push-res_start)
.byt VERB_PULL
.word (l_Pull-res_start)
.byt $ff ; End of response table
l_Push
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 210
.byt 0
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 3
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 210
.byt 0
.byt SC_PLAYSFX
.byt 4
.byt SC_SETFLAG, 52	; bLed1On=true
.byt 1
.byt SC_LOAD_OBJECT
.byt 64, 220
.byt SC_SET_ANIMSTATE
.byt 64, 220
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,53	; bLed2On
.byt 11
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 221
.byt SC_SETFLAG, 53	; bLed2On=false
.byt 0
.byt SC_STOP_SCRIPT
l_Pull
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 210
.byt 1
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 4
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 210
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,52	; bLed1On
.byt 11
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 220
.byt SC_SETFLAG, 52	; bLed1On=false
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 211
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 211
res_start
; Response table
.byt VERB_PUSH
.word (l_Push-res_start)
.byt VERB_PULL
.word (l_Pull-res_start)
.byt $ff ; End of response table
l_Push
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 211
.byt 2
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 3
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 211
.byt 2
.byt SC_PLAYSFX
.byt 4
.byt SC_SETFLAG, 53	; bLed2On=true
.byt 1
.byt SC_LOAD_OBJECT
.byt 64, 221
.byt SC_SET_ANIMSTATE
.byt 64, 221
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,52	; bLed1On
.byt 11
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 220
.byt SC_SETFLAG, 52	; bLed1On=false
.byt 0
.byt SC_STOP_SCRIPT
l_Pull
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 211
.byt 3
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 4
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 211
.byt 3
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,53	; bLed2On
.byt 11
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 221
.byt SC_SETFLAG, 53	; bLed2On=false
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 212
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 212
res_start
; Response table
.byt VERB_PUSH
.word (l_Push-res_start)
.byt VERB_PULL
.word (l_Pull-res_start)
.byt $ff ; End of response table
l_Push
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 212
.byt 4
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 3
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 212
.byt 4
.byt SC_PLAYSFX
.byt 4
.byt SC_SETFLAG, 54	; bLed3On=true
.byt 1
.byt SC_LOAD_OBJECT
.byt 64, 222
.byt SC_SET_ANIMSTATE
.byt 64, 222
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,53	; bLed2On
.byt 11
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 221
.byt SC_SETFLAG, 53	; bLed2On=false
.byt 0
.byt SC_STOP_SCRIPT
l_Pull
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 212
.byt 5
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 4
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 212
.byt 5
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,54	; bLed3On
.byt 11
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 222
.byt SC_SETFLAG, 54	; bLed3On=false
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 213
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 213
res_start
; Response table
.byt VERB_PUSH
.word (l_Push-res_start)
.byt VERB_PULL
.word (l_Pull-res_start)
.byt $ff ; End of response table
l_Push
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 213
.byt 6
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 3
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 213
.byt 6
.byt SC_PLAYSFX
.byt 4
.byt SC_SETFLAG, 55	; bLed4On=true
.byt 1
.byt SC_LOAD_OBJECT
.byt 64, 223
.byt SC_SET_ANIMSTATE
.byt 64, 223
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,52	; bLed1On
.byt 13
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 220
.byt SC_SETFLAG, 52	; bLed1On=false
.byt 0
.byt SC_JUMP_REL, 12
; else part
.byt SC_LOAD_OBJECT
.byt 64, 220
.byt SC_SET_ANIMSTATE
.byt 64, 220
.byt 0
.byt SC_SETFLAG, 52	; bLed1On=true
.byt 1
.byt SC_STOP_SCRIPT
l_Pull
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 213
.byt 7
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt SF_GET_ACTIONACTOR
.byt 64, 200
.byt 4
.byt SC_STOP_SCRIPT
.byt SC_SET_ANIMSTATE
.byt 64, 213
.byt 7
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,55	; bLed4On
.byt 11
; then part
.byt SC_REMOVE_OBJECT
.byt 64, 223
.byt SC_SETFLAG, 55	; bLed4On=false
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 214
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 214
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_LOAD_ROOM
.byt 43
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 220
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 220
res_start
; Response table
.byt $ff ; End of response table
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 221
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 221
res_start
; Response table
.byt $ff ; End of response table
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 222
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 222
res_start
; Response table
.byt $ff ; End of response table
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 223
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 223
res_start
; Response table
.byt $ff ; End of response table
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 224
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 224
res_start
; Response table
.byt $ff ; End of response table
.byt SC_STOP_SCRIPT
res_end
.)

; Script 230
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 230
res_start
+script_230_start
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_AND
.byt SF_AND
.byt SF_GETFLAG,52	; bLed1On
.byt SF_GETFLAG,53	; bLed2On
.byt SF_GETFLAG,54	; bLed3On
.byt SF_GETFLAG,55	; bLed4On
.byt 26
; then part
.byt SC_SETFLAG, 56	; bDoorPuzzleDone=true
.byt 1
.byt SC_CURSOR_ON
.byt 0
.byt SC_PLAYSFX
.byt 6
.byt SC_WAIT_FOR_TUNE
.byt SC_SPAWN_SCRIPT
.byt 17
.byt SC_JUMP_REL, 5
; else part
.byt SC_DELAY
.byt 20
.byt SC_RESTART_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Script 231
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 231
res_start
+script_231_start
.byt SC_BREAK_HERE
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 12
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_DELAY
.byt 50
.byt SC_CURSOR_ON
.byt 1
.byt SC_LOAD_ROOM
.byt 43
.byt SC_STOP_SCRIPT
res_end
.)

; String pack 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 200
res_start
.asc "Una mesa de control con palancas.",0 ; String 0
.asc "Esta puerta est",91," cerrada.",0 ; String 1
.asc "Estos aparatos ya no funcionan.",0 ; String 2
.asc "Tengo que tirar de ella primero.",0 ; String 3
.asc "Tengo que empujarla primero.",0 ; String 4
.asc "Esta es la entrada.",0 ; String 5
.asc "Pero la puerta est",91," cerrada.",0 ; String 6
.asc "",125,"Bien! ",125,"Buen trabajo!",0 ; String 7
.asc "A trav",92,"s de estos t",95,"neles se llega",0 ; String 8
.asc "al pasillo de servicio de la base.",0 ; String 9
.asc "A ver si recuerdo el camino...",0 ; String 10
.asc "No hace falta. La puerta est",91," abierta.",0 ; String 11
.asc "Los sistemas no tienen energ",93,"a.",0 ; String 12
.asc "",125,"Funciona! Los sistemas arrancan.",0 ; String 13
res_end
.)
