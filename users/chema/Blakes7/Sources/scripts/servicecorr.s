;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by OASIS compiler
; (c) Chema 2016
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Object Code 201
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 201
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_SET_OBJECT_POS
.byt 0
.byt 4
.byt 16
.byt 4
.byt SC_CHANGE_ROOM_AND_STOP
.byt 4
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 200
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 200
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_PUSH
.word (l_Push-res_start)
.byt VERB_PULL
.word (l_Pull-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,22	; bGratingOpen
.byt 13
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 1
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
l_Open
l_Push
l_Pull
l_Use
l_WalkTo
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 64, 200
.byt SF_NOT
.byt SF_GETFLAG,22	; bGratingOpen
.byt 35
; then part
.byt SC_DELAY
.byt 10
.byt SC_CURSOR_ON
.byt 0
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 2
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 1
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 64, 200
.byt SF_GETFLAG,22	; bGratingOpen
.byt 18
; then part
.byt SC_SET_OBJECT_POS
.byt 0
.byt 8
.byt 13
.byt 22
.byt SC_CHANGE_ROOM_AND_STOP
.byt 8
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 6
.byt 21
; then part
.byt SC_DELAY
.byt 10
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 3
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_JUMP_REL, 44
; else part
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 4
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_DELAY
.byt 10
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_DELAY
.byt 10
.byt SC_PLAYSFX
.byt 5
.byt SC_SET_ANIMSTATE
.byt 64, 200
.byt 1
.byt SC_BREAK_HERE
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 6
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_SETFLAG, 22	; bGratingOpen=true
.byt 1
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 206
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 206
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 7
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_PickUp
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 8
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 207
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 207
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 9
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_Open
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 10
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 205
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 205
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 11
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 12
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 13
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_SPAWN_SCRIPT
.byt 64, 210
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 204
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 204
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 14
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 15
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 202
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 202
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_CLOSE
.word (l_Close-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 16
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_Open
l_Close
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 17
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_SPAWN_SCRIPT
.byt 64, 210
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 203
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 203
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_ADD
.byt 22
.byt SF_GETVAL,0	; tmpParam1
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 26
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Script 210
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 210
res_start
+script_210_start
.byt SC_DELAY
.byt 50
.byt SC_ASSIGN, 0	; tmpParam1=tmpParam1+1
.byt SF_ADD
.byt SF_GETVAL,0	; tmpParam1
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,0	; tmpParam1
.byt 4
.byt 10
; then part
.byt SC_ASSIGN, 0	; tmpParam1=0
.byt 0
.byt SC_PRINT
.byt 64, 200
.byt SF_ADD
.byt 18
.byt SF_GETVAL,0	; tmpParam1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,0	; tmpParam1
.byt 0
.byt 12
; then part
.byt SC_PLAYSFX
.byt 1
.byt SC_WAIT_FOR_TUNE
.byt SC_PLAYSFX
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,0	; tmpParam1
.byt 1
.byt 12
; then part
.byt SC_PLAYSFX
.byt 12
.byt SC_WAIT_FOR_TUNE
.byt SC_PLAYSFX
.byt 12
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,0	; tmpParam1
.byt 2
.byt 12
; then part
.byt SC_PLAYSFX
.byt 1
.byt SC_WAIT_FOR_TUNE
.byt SC_PLAYSFX
.byt 12
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,0	; tmpParam1
.byt 3
.byt 12
; then part
.byt SC_PLAYSFX
.byt 12
.byt SC_WAIT_FOR_TUNE
.byt SC_PLAYSFX
.byt 1
.byt SC_DELAY
.byt 50
.byt SC_PRINT
.byt 64, 200
.byt 27
.byt SC_STOP_SCRIPT
res_end
.)

; Script 211
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 211
res_start
+script_211_start
.byt SC_ASSIGN, 0	; tmpParam1=0
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)

; String pack 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 200
res_start
.asc "It leads to the ventilation system.",0 ; String 0
.asc "The grid is firmly screwed to the wall.",0 ; String 1
.asc "I can't.",0 ; String 2
.asc "It doesn't help to remove the grid.",0 ; String 3
.asc "The coin fits in the slot perfectly!",0 ; String 4
.asc "One more... and...",0 ; String 5
.asc "Ready.",0 ; String 6
.asc "It's big, red, and important.",0 ; String 7
.asc "Why? There's no fire.",0 ; String 8
.asc "It's the typical electrical cabinet.",0 ; String 9
.asc "I can't. It's closed.",0 ; String 10
.asc "Figures, lights and buttons.",0 ; String 11
.asc "I have no idea how to operate it.",0 ; String 12
.asc "I'll press a random button...",0 ; String 13
.asc "This is completely unfathomable!",0 ; String 14
.asc "I would not know how to.",0 ; String 15
.asc "A manual valve. This one is easy!",0 ; String 16
.asc "Okay, let's turn it...",0 ; String 17
.asc " (Beep, beep)",0 ; String 18
.asc " (Boop, boop)",0 ; String 19
.asc " (Beep, boop)",0 ; String 20
.asc " (Boop, beep)",0 ; String 21
.asc "A bar is flashing in red and blue.",0 ; String 22
.asc "A blue square is flashing.",0 ; String 23
.asc "'Level of g-beamflux low', it says...",0 ; String 24
.asc "'Squiringenyzer ON', it says...",0 ; String 25
.asc "Whatever that means...",0 ; String 26
.asc " ",0 ; String 27
res_end
.)
