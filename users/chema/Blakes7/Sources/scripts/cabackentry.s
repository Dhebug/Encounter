;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by OASIS compiler
; (c) Chema 2016
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; String pack 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 200
res_start
.asc "It seems to me that it is the system",0 ; String 0
.asc "to open the gate.",0 ; String 1
.asc "Solid bars. I don't think I will be",0 ; String 2
.asc "able to break them.",0 ; String 3
.asc "It seems the stopper is broken.",0 ; String 4
.asc "If I had some kind of hard stick...",0 ; String 5
.asc "That won't help.",0 ; String 6
.asc "I can't, with the gate closed.",0 ; String 7
.asc "Nice idea! It will do the trick!",0 ; String 8
.asc "The gun is keeping the gate up.",0 ; String 9
res_end
.)

; Object Code 200
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 200
res_start
; Response table
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_WalkTo
.byt SC_SET_OBJECT_POS
.byt 0
.byt 33
.byt 10
.byt 4
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_CHANGE_ROOM_AND_STOP
.byt 33
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 202
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 202
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt $ff ; End of response table
l_LookAt
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,45	; bPulleyDone
.byt 11
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 9
.byt SC_STOP_SCRIPT
.byt SC_CURSOR_ON
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 203
.byt 5
.byt 22
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 4
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_JUMP_REL, 14
; else part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 1
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,45	; bPulleyDone
.byt 8
; then part
.byt SC_JUMP
.word (l_LookAt-res_start)
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_AND
.byt SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 36
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 203
.byt 5
.byt 54
; then part
.byt SC_CURSOR_ON
.byt 0
.byt SC_TERMINATE_SCRIPT
.byt 64, 202
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 8
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_WALKTO
.byt 0
.byt 12
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_LOOK_DIRECTION
.byt 0
.byt 2
.byt SC_DELAY
.byt 10
.byt SC_REMOVE_FROM_INVENTORY
.byt 36
.byt SC_SET_ANIMSTATE
.byt 64, 202
.byt 4
.byt SC_SETFLAG, 45	; bPulleyDone=true
.byt 1
.byt SC_SAVEGAME
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 64, 202
.byt 14
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 6
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 203
.byt 0
.byt 18
; then part
.byt SC_CURSOR_ON
.byt 0
.byt SC_CHAIN_SCRIPT
.byt 64, 200
.byt SC_SPAWN_SCRIPT
.byt 64, 202
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 203
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 203
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_LookAt
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,45	; bPulleyDone
.byt 12
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 9
.byt SC_JUMP_REL, 20
; else part
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 2
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 3
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
l_WalkTo
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ANIMSTATE
.byt 64, 203
.byt 5
.byt 15
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 7
.byt SC_STOP_SCRIPT
.byt SC_SET_OBJECT_POS
.byt 0
.byt 37
.byt 15
.byt 32
.byt SC_LOOK_DIRECTION
.byt 0
.byt 1
.byt SC_SPAWN_SCRIPT
.byt 10
.byt SC_STOP_SCRIPT
res_end
.)

; Script 200
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 200
res_start
+script_200_start
.byt SC_ASSIGN, 64, 201	; j=1
.byt 1
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=1
.byt 1
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LE
.byt SF_GETVAL,64, 200	; i
.byt 5
.word 64
; for body
.byt SC_SET_ANIMSTATE
.byt 64, 203
.byt SF_GETVAL,64, 200	; i
.byt SC_SET_ANIMSTATE
.byt 64, 202
.byt SF_GETVAL,64, 201	; j
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 201	; j
.byt 3
.byt 14
; then part
.byt SC_ASSIGN, 64, 201	; j=0
.byt 0
.byt SC_JUMP_REL, 10
; else part
.byt SC_ASSIGN, 64, 201	; j=j+1
.byt SF_ADD
.byt SF_GETVAL,64, 201	; j
.byt 1
.byt SC_DELAY
.byt 10
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 8, 0	; jump to 8
.byt SC_STOP_SCRIPT
res_end
.)

; Script 201
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 201
res_start
+script_201_start
.byt SC_ASSIGN, 64, 201	; j=sfGetAnimstate(202)
.byt SF_GET_ANIMSTATE
.byt 64, 202
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=5
.byt 5
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GETVAL,64, 200	; i
.byt 64, 255
.word 68
; for body
.byt SC_SET_ANIMSTATE
.byt 64, 203
.byt SF_GETVAL,64, 200	; i
.byt SC_SET_ANIMSTATE
.byt 64, 202
.byt SF_GETVAL,64, 201	; j
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 201	; j
.byt 0
.byt 14
; then part
.byt SC_ASSIGN, 64, 201	; j=3
.byt 3
.byt SC_JUMP_REL, 10
; else part
.byt SC_ASSIGN, 64, 201	; j=j-1
.byt SF_SUB
.byt SF_GETVAL,64, 201	; j
.byt 1
.byt SC_DELAY
.byt 2
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i-1
.byt SF_SUB
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 10, 0	; jump to 10
.byt SC_STOP_SCRIPT
res_end
.)

; Script 202
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 202
res_start
+script_202_start
.byt SC_ASSIGN, 64, 201	; col=sfGetCol(0)
.byt SF_GET_COL
.byt 0
.byt SC_ASSIGN, 64, 200	; row=sfGetRow(0)
.byt SF_GET_ROW
.byt 0
l_loop
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_OR
.byt SF_NOT, SF_EQ
.byt SF_GET_COL
.byt 0
.byt SF_GETVAL,64, 201	; col
.byt SF_NOT, SF_EQ
.byt SF_GET_ROW
.byt 0
.byt SF_GETVAL,64, 200	; row
.byt 24
; then part
.byt SC_STOPCHARACTION
.byt 0
.byt SC_SPAWN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_BREAK_HERE
.byt SC_JUMP
.word (l_loop-res_start)
.byt SC_STOP_SCRIPT
res_end
.)

; Script 210
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 210
res_start
+script_210_start
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,45	; bPulleyDone
.byt 13
; then part
.byt SC_SET_ANIMSTATE
.byt 64, 202
.byt 4
.byt SC_SET_ANIMSTATE
.byt 64, 203
.byt 5
.byt SC_STOP_SCRIPT
res_end
.)
