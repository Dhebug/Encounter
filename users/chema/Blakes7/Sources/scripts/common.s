;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by OASIS compiler
; (c) Chema 2016
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Script 200
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 200
res_start
+script_200_start
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,63	; bCupTaken
.byt 9
; then part
.byt SC_LOAD_OBJECT
.byt 64, 201
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,64, 64	; bGuardLeftCommon
.byt 20
; then part
.byt SC_LOAD_OBJECT
.byt 2
.byt SC_SET_OBJECT_POS
.byt 2
.byt 51
.byt 14
.byt 14
.byt SC_LOOK_DIRECTION
.byt 2
.byt 2
.byt SC_SPAWN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 200
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 200
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_SET_OBJECT_POS
.byt SF_GET_ACTIONACTOR
.byt 45
.byt 14
.byt 49
.byt SC_LOOK_DIRECTION
.byt SF_GET_ACTIONACTOR
.byt 3
.byt SC_CHANGE_ROOM_AND_STOP
.byt 45
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 201
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 201
res_start
; Response table
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_PickUp
.byt SC_PUT_IN_INVENTORY
.byt 49
.byt SC_REMOVE_OBJECT
.byt 64, 201
.byt SC_SETFLAG, 63	; bCupTaken=true
.byt 1
.byt SC_SAVEGAME
.byt SC_STOP_SCRIPT
l_LookAt
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 24
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 203
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 203
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_WalkTo
l_LookAt
.byt SC_SPAWN_SCRIPT
.byt 64, 203
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 202
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 202
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt $ff ; End of response table
l_WalkTo
l_LookAt
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 1
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 2
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_STOP_SCRIPT
l_Use
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 49
.byt 19
; then part
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 3
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_STATE
.byt 49
.byt 1
.byt 20
; then part
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 3
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_STOP_SCRIPT
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 4
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_WALKTO
.byt SF_GETVAL,64, 200	; a
.byt 20
.byt 14
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; a
.byt 2
.byt SC_PLAYSFX
.byt 12
.byt SC_WAIT_FOR_TUNE
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; a
.byt 3
.byt SC_SET_STATE
.byt 49
.byt 2
.byt SC_SAVEGAME
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 204
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 204
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 16
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 17
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
l_Use
l_PickUp
l_Open
.byt SC_ACTOR_TALK
.byt SF_GET_EGO
.byt 64, 200
.byt 19
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 205
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 205
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 18
.byt SC_STOP_SCRIPT
l_Open
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 21
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 22
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_DELAY
.byt 64, 100
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; a
.byt 3
.byt SC_BREAK_HERE
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 23
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
l_Use
l_PickUp
.byt SC_ACTOR_TALK
.byt SF_GET_EGO
.byt 64, 200
.byt 20
.byt SC_STOP_SCRIPT
res_end
.)

; Script 201
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 201
res_start
+script_201_start
.byt SC_STOP_SCRIPT
res_end
.)

; Script 202
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 202
res_start
+script_202_start
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_STATE
.byt 49
.byt 0
.byt 13
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 7
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_STATE
.byt 49
.byt 1
.byt 13
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 8
.byt SC_STOP_SCRIPT
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 9
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_WALKTO
.byt 0
.byt 19
.byt 14
.byt SC_LOOK_DIRECTION
.byt 0
.byt 1
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 10
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_LOOK_DIRECTION
.byt 2
.byt 0
.byt SC_BREAK_HERE
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 200
.byt 11
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 12
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 200
.byt 13
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 200
.byt 14
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_ACTOR_TALK
.byt 2
.byt 64, 200
.byt 15
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_ACTOR_WALKTO
.byt 2
.byt 14
.byt 16
.byt SC_WAIT_FOR_ACTOR
.byt 2
.byt SC_REMOVE_OBJECT
.byt 2
.byt SC_SETFLAG, 64, 64	; bGuardLeftCommon=true
.byt 1
.byt SC_REMOVE_FROM_INVENTORY
.byt 49
.byt SC_CURSOR_ON
.byt 1
.byt SC_SAVEGAME
.byt SC_STOP_SCRIPT
res_end
.)

; Script 203
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 203
res_start
+script_203_start
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,64, 65	; bLaundryMesgSeen
.byt 42
; then part
.byt SC_ASSIGN, 64, 200	; a=sfGetEgo()
.byt SF_GET_EGO
.byt SC_CURSOR_ON
.byt 0
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_PLAYSFX
.byt 4
.byt SC_WAIT_FOR_TUNE
.byt SC_ACTOR_TALK
.byt SF_GETVAL,64, 200	; a
.byt 64, 200
.byt 6
.byt SC_WAIT_FOR_ACTOR
.byt SF_GETVAL,64, 200	; a
.byt SC_SETFLAG, 64, 65	; bLaundryMesgSeen=true
.byt 1
.byt SC_LOAD_ROOM
.byt 64, 200
.byt SC_DELAY
.byt 64, 150
.byt SC_CURSOR_ON
.byt 1
.byt SC_LOAD_ROOM
.byt 51
.byt SC_STOP_SCRIPT
res_end
.)

; String pack 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 200
res_start
.asc "De metal, compacta y superautom",91,"tica",0 ; String 0
.asc "con el sistema Fed'Xpresso patentado",0 ; String 1
.asc "de preparaci",94,"n de capuccinos.",0 ; String 2
.asc "El dep",94,"sito de agua est",91," vac",93,"o.",0 ; String 3
.asc "Vale, usar",92," el agua para hacer caf",92,".",0 ; String 4
.asc "Mira, se ha dejado la sesi",94,"n abierta.",0 ; String 5
.asc "Acaba de llegarle un mensaje...",0 ; String 6
.asc "No s",92," qu",92," quieres que haga.",0 ; String 7
.asc "",126,"Y empaparlo? No, gracias.",0 ; String 8
.asc "Est",91," bien, fingir",92,"...",0 ; String 9
.asc "",125,"Ups!",0 ; String 10
.asc "",125,"Qu",92," diablos!...",0 ; String 11
.asc "Lo siento mucho...",0 ; String 12
.asc "",125,"Me has puesto perdido!",0 ; String 13
.asc "Y a",95,"n no est",91," listo mi otro uniforme.",0 ; String 14
.asc "Como no sea capaz de limpiarlo...",0 ; String 15
.asc "Parecen todos libros de historia.",0 ; String 16
.asc "Aprobados por la Federaci",94,"n, claro.",0 ; String 17
.asc "'Las Colonias Exteriores'",0 ; String 18
.asc "No tengo tiempo para leer.",0 ; String 19
.asc "No lo necesito.",0 ; String 20
.asc "",125,"Buena idea! Fijo que hay algo ",95,"til",0 ; String 21
.asc "usado como separador...",0 ; String 22
.asc "Ah, pues no. S",94,"lo un papel en blanco.",0 ; String 23
.asc "S",94,"lo es una taza.",0 ; String 24
res_end
.)
