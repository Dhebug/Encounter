;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Generated by OASIS compiler
; (c) Chema 2016
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Script 200
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 200
res_start
+script_200_start
.byt SC_SETFLAG, 23	; bTryOpenLockers=false
.byt 0
.byt SC_SETFLAG, 24	; bTryKeyLockers=false
.byt 0
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_GETFLAG,25	; bEnvelopeExamined
.byt 48
; then part
.byt SC_CURSOR_ON
.byt 0
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=0
.byt 0
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LE
.byt SF_GETVAL,64, 200	; i
.byt 5
.word 48
; for body
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 201
.byt SF_ADD
.byt 8
.byt SF_GETVAL,64, 200	; i
.byt SC_WAIT_FOR_ACTOR
.byt 0
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 17, 0	; jump to 17
.byt SC_SETFLAG, 25	; bEnvelopeExamined=false
.byt 0
.byt SC_SAVEGAME
.byt SC_CURSOR_ON
.byt 1
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 200
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 200
res_start
; Response table
.byt VERB_WALKTO
.word (l_WalkTo-res_start)
.byt $ff ; End of response table
l_WalkTo
.byt SC_ASSIGN, 64, 200	; actor=sfGetActorExecutingAction()
.byt SF_GET_ACTIONACTOR
.byt SC_SET_OBJECT_POS
.byt SF_GETVAL,64, 200	; actor
.byt 3
.byt 13
.byt 28
.byt SC_LOOK_DIRECTION
.byt SF_GETVAL,64, 200	; actor
.byt 3
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; actor
.byt SF_GET_EGO
.byt 10
; then part
.byt SC_CHANGE_ROOM_AND_STOP
.byt 3
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 201
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 201
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 0
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_PickUp
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_GETRANDINT
.byt 6
.byt 9
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 202
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 202
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 1
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_PickUp
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_GETRANDINT
.byt 6
.byt 9
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 203
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 203
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 2
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_PickUp
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_GETRANDINT
.byt 6
.byt 9
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 204
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 204
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 3
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_PickUp
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_GETRANDINT
.byt 6
.byt 9
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 205
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 205
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 4
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_PickUp
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_GETRANDINT
.byt 6
.byt 9
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 210
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 210
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 211
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 211
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 212
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 212
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 213
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 213
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 206
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 206
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 207
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 207
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 208
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 208
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 209
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 209
res_start
; Response table
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt $ff ; End of response table
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 5
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
l_Use
l_Open
.byt SC_CHAIN_SCRIPT
.byt 64, 201
.byt SC_STOP_SCRIPT
.byt SC_STOP_SCRIPT
res_end
.)

; Object Code 214
.(
.byt RESOURCE_OBJECTCODE|$80
.word (res_end-res_start +4)
.byt 214
res_start
; Response table
.byt VERB_USE
.word (l_Use-res_start)
.byt VERB_PICKUP
.word (l_PickUp-res_start)
.byt VERB_OPEN
.word (l_Open-res_start)
.byt VERB_LOOKAT
.word (l_LookAt-res_start)
.byt $ff ; End of response table
l_Use
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 255
.byt 11
; then part
.byt SC_SPAWN_SCRIPT
.byt 1
.byt SC_STOP_SCRIPT
l_PickUp
l_Open
l_LookAt
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 20
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_SPAWN_SCRIPT
.byt 64, 202
.byt SC_STOP_SCRIPT
res_end
.)

; Script 202
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 202
res_start
+script_202_start
.byt SC_SHOW_VERBS
.byt 0
.byt SC_ACTOR_WALKTO
.byt 0
.byt 15
.byt 15
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_LOOK_DIRECTION
.byt 0
.byt 2
.byt SC_SET_ANIMSTATE
.byt 64, 208
.byt 0
.byt SC_REMOVE_OBJECT
.byt 64, 214
; for
; Init part
.byt SC_ASSIGN, 64, 200	; i=0
.byt 0
; Condition
.byt SC_JUMP_IF, SF_NOT
.byt SF_LE
.byt SF_GETVAL,64, 200	; i
.byt 6
.word 62
; for body
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GETVAL,64, 200	; i
.byt 1
.byt 11
; then part
.byt SC_LOOK_DIRECTION
.byt 0
.byt 3
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 201
.byt SF_GETVAL,64, 200	; i
.byt SC_WAIT_FOR_ACTOR
.byt 0
; Increment expression
.byt SC_ASSIGN, 64, 200	; i=i+1
.byt SF_ADD
.byt SF_GETVAL,64, 200	; i
.byt 1
; end for
.byt SC_JUMP, 22, 0	; jump to 22
.byt SC_ASSIGN, 64, 201	; ef=sfGetFadeEffect()
.byt SF_GET_FADEEFFECT
.byt SC_SET_FADEEFFECT
.byt 0
.byt SC_LOAD_ROOM
.byt 64, 200
.byt SC_BREAK_HERE
.byt SC_DELAY
.byt 50
.byt SC_PRINT_AT
.byt 64, 201
.byt 7
.byt 30
.byt 0
.byt SC_DELAY
.byt 64, 100
.byt SC_SET_FADEEFFECT
.byt SF_GETVAL,64, 201	; ef
.byt SC_SHOW_VERBS
.byt 1
.byt SC_REMOVE_FROM_INVENTORY
.byt 8
.byt SC_SETFLAG, 25	; bEnvelopeExamined=true
.byt 1
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,13	; bGuardWentForCoffee
.byt 15
; then part
.byt SC_SETFLAG, 13	; bGuardWentForCoffee=true
.byt 1
.byt SC_SET_OBJECT_POS
.byt 2
.byt 64, 255
.byt 0
.byt 0
.byt SC_LOAD_ROOM
.byt 13
.byt SC_STOP_SCRIPT
res_end
.)

; String pack 201
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 201
res_start
.asc "",126,"Qu",92," es esto? un papel en blanco...",0 ; String 0
.asc "",125,"Un momento! se forma una imagen...",0 ; String 1
.asc "Una foto. ",125,"Ese soy yo!",0 ; String 2
.asc "Pero ",126,"qui",92,"n es esa gente?",0 ; String 3
.asc "Y ",126,"d",94,"nde estamos?",0 ; String 4
.asc "Mi mente... todo est",91," borroso...",0 ; String 5
.asc "",125,"Me estoy mareando!",0 ; String 6
.asc "Aaaaarghhhh!!",0 ; String 7
.asc "",126,"Qu",92," ha sido eso?",0 ; String 8
.asc "Como si un monstruo se asomase a la",0 ; String 9
.asc "puerta y, de pronto, se marchase...",0 ; String 10
.asc "La foto se ha borrado de nuevo.",0 ; String 11
.asc "Ravella tiene mucho que explicar.",0 ; String 12
.asc "",125,"Es hora de volver a verla!",0 ; String 13
res_end
.)

; String pack 200
.(
.byt RESOURCE_STRING|$80
.word (res_end-res_start +4)
.byt 200
res_start
.asc "Un caldero y una fregona.",0 ; String 0
.asc "",126,"Cicl",94,"nica? Quiz",91,"s...",0 ; String 1
.asc "Parece bastante robusta.",0 ; String 2
.asc "Varios productos de limpieza.",0 ; String 3
.asc "Pone: Cuidado, suelo h",95,"medo.",0 ; String 4
.asc "Una taquilla. Nada en especial.",0 ; String 5
.asc "",125,"No es momento de ponerse a limpiar!",0 ; String 6
.asc "",126,"Y qu",92," esperas que haga con eso?",0 ; String 7
.asc "Prefiero que se quede aqu",93,".",0 ; String 8
.asc "No es ",95,"til para nuestros prop",94,"sitos.",0 ; String 9
.asc "La taquilla est",91," cerrada.",0 ; String 10
.asc "Esta taquilla tambi",92,"n est",91," cerrada.",0 ; String 11
.asc "Y esta tambi",92,"n est",91," cerrada.",0 ; String 12
.asc "Cerrada. Creo que todas lo est",91,"n.",0 ; String 13
.asc "La llave no vale para ",92,"sta.",0 ; String 14
.asc "Tampoco vale para ",92,"sta otra.",0 ; String 15
.asc "No. No es la de ",92,"sta.",0 ; String 16
.asc "",125,"Aj",91,"! Entra... ah, que no.",0 ; String 17
.asc "Esta s",93,". Perfecto.",0 ; String 18
.asc "Eso no va a ayudar.",0 ; String 19
.asc "A ver de qu",92," va todo esto.",0 ; String 20
res_end
.)

; Script 201
.(
.byt RESOURCE_SCRIPT|$80
.word (res_end-res_start +4)
.byt 201
res_start
+script_201_start
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ACTIONVERB
.byt 2
.byt 64, 76
; then part
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT, SF_EQ
.byt SF_GET_ACTIONOBJ1
.byt 8
.byt 15
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 19
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_EQ
.byt SF_GET_ACTIONOBJ2
.byt 64, 208
.byt 23
; then part
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt 18
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_SET_ANIMSTATE
.byt 64, 208
.byt 1
.byt SC_LOAD_OBJECT
.byt 64, 214
.byt SC_JUMP_REL, 32
; else part
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,24	; bTryKeyLockers
.byt 15
; then part
.byt SC_ASSIGN, 64, 200	; s=14
.byt 14
.byt SC_SETFLAG, 24	; bTryKeyLockers=true
.byt 1
.byt SC_JUMP_REL, 8
; else part
.byt SC_ASSIGN, 64, 200	; s=sfGetRandInt(15,17)
.byt SF_GETRANDINT
.byt 15
.byt 17
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_GETVAL,64, 200	; s
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
; if
.byt SC_JUMP_REL_IF, SF_NOT
.byt SF_NOT
.byt SF_GETFLAG,23	; bTryOpenLockers
.byt 15
; then part
.byt SC_ASSIGN, 64, 200	; s=10
.byt 10
.byt SC_SETFLAG, 23	; bTryOpenLockers=true
.byt 1
.byt SC_JUMP_REL, 8
; else part
.byt SC_ASSIGN, 64, 200	; s=sfGetRandInt(11,13)
.byt SF_GETRANDINT
.byt 11
.byt 13
.byt SC_ACTOR_TALK
.byt 0
.byt 64, 200
.byt SF_GETVAL,64, 200	; s
.byt SC_WAIT_FOR_ACTOR
.byt 0
.byt SC_STOP_SCRIPT
res_end
.)
