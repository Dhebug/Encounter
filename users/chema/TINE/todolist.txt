+ AddSpaceObject needs tmp0 pointing to a coordinate structure, but it is allways _PosX. 
Should we change this, or at least add another routine that loads the tmp0 pointer?


+ Elite TNK uses the current galactic seed (6bytes) to create planets. As this seed may be corrupt (whenever used for creating
a galactic chart or to find a planet), I will use the system's seed of 4 bytes (base for goatsoup).


+ When saving the laser vertex there is no check to see if it is not a ship (something like a planet)
         beq normal
         cmp #5           ; is it 1,2 or 4 ? Then planet, sun or moon
         bcc checkmin    ; skip max check
normal

- Enemies allways fire you at the same position in the frame

+ When drawing planets, if they are too close, maybe it is better not to draw them // if 0x6000/Z > 0xff then return  (too close to draw?)

+ A certain hysteresis would be needed to avoid planets appearing and disappearing as we rotate.

+ Look in tineloop.s
notdocked
        jsr clr_hires
        jsr load_frame
        jsr _DrawFrameBorder   
        jsr _DoubleBuffOn
        jsr _FirstFrame

If DrawFrameBorder is called before load_frame there is a bug the second time we switch from screen2 to frontview (the frame is erased at the bottom).

- Adapt the ship diameter (size) from the data to the scaled-down versions generated by modelimport (see out.txt in the modelimport folder).

- PROBLEM: Seems that rotating 3 degrees is too much for easy targeting the enemy!!! That requires modifications in the engine for the player!!!

- Cannot add color if the frame is in pixel 5. If it is not, the frame should be drawn at every screen dump?

+ Implement a Cargo screen

+ Implement a save/load screen

- Check and manage fuel

- Buy/manage equipment

- Create enemies dynamically

- Missiles should not destroy planets... (should never target them!). Is this solved now?

- Complete AI

- Implement ECM for missiles

- Remove inflight messages afer jumping/docking...

- Update ship's energy, in a timely manner and to maximum when dock (or before leaving the planet)

+ Bounties added, but it is quite a waste to use 2 bytes for just a couple of cases... Anyway the inflight message with
the bounty appears maybe too fast? Maybe even before the ship explodes!

- Scooping is implemented, but it seems that randomly creating the loot harldy creates anything (not even plates). 
Don't know what is going on here... should check. UPDATE: Seems OK now (but still prob is low).

- When your ship is destroyed, sometimes everything seems to hung. No apparent reason, but maybe too many objects? 
Seems not quite probable. Hard to make this repeatable.

- damage_ship needs a look... it is quite a disaster. DONE. Also modified damage_player to be sure to decouple it...

- I am not sure when, but sometimes increment_kills is called with wrong parameters and fails... Target the ADDER and destroy it when nearby to see. Maybe it was because of the lack of memory? reducing MAXSHIPS to 10 seems to have solved this. SOLVED?

+ After moving the laser origin and destination points for drawing to page 4, as they are not initialized, four erroneous lines appear at the first time space is draw.

- The first time we go back from a text screen to space view, the three lines of text go black paper. Also sometimes @ chars appear... Too low on memory?, but why if we are not creating new objects? Maybe we are copying more lines than necessary for drawing the cockpit?

+ Check the escape pod flags. When killing the ADDER it seems that _flags FLG_INNOCENT is not set (?)

- Our explosion is not quite good... be sure to launch splinters, at least... Ok now it allways launches splinters, but need more MAXOBJS to work. 10 are too low.

- If we are to use Fore and Aft shields, we need to modify damage_ship so something (like the carry flag)
indicates if the damaging ship is in front or not. It is necessary because of missiles (in which the register Y
indicates the launcher).

- Avoid scooping alloys when dying.

- Rotation of stars is wrong. ROTATEP and ROTATEN rotate just one step. Need to loop g_alpha times.

Dbugs idea here:
let say that from a particular orientation and velocity you can compute a vector

[13:55] <_Dbug_> this vector is a fixed point signed thing, that represents the increment in X/Y/Z to apply to a particular position to get to the new position in this particular direction at this particular speed
[13:56] <Chema> That is what it must be doing, if I am not wrong, for adding that vector to the object's centre position.
[13:56] <_Dbug_> Then there is no need for computing this vector if the angle or velocity does not change
[13:56] <_Dbug_> just need to add it each frame
[13:56] <_Dbug_> newpos=oldpos+incrementpos
[13:57] <_Dbug_> you need to recompute the move vector only if the orientation or the velocity changes
[13:58] <Chema> Something like keeping the vector for each ship and a flag indicating if it is still valid or not. If a ship rotates or accelerates/deccelerates it will become invalid. Else you apply the same calculation again.
[13:58] <_Dbug_> and if the velocity only changes, you can probably just scale the vector


- Modified back tinefuncs.s MoveCurrent so it does
    jsr check_maxman
    sta _rotXXXX,x

	This was commented out, I don't know why. This is the preferred behaviour in Elite (from TNK: rotate 1 amount per turn, and keep track of how much is left).

	Commented it back, so rotXXX keeps the value until told otherwise. Seems enemies are much more agile this way... Need to check.

- Flahses in red and yellow also happen when in screens different than FRONT_VIEW. This is buggy.

- Models seem too big. The first intro screen with the rotating COBRA starts overflowing after several minutes!

- After adding energy refill, speed gets back > 0 when dying. Need to add a game_over or player_dead variable to keep track of all this.

- Had to set HIRES mode from the INIST, as the copy of the charset was destroying data.

- Check missiles. When fired they seem to jump quite far from the launcher. Maybe speed is too high or they are moved too far.

+ Change alert_cops in tactics to make_angry to save some CPU cycles. Now it is on damage_ship and damage_player. However this is less realistic,
  as it would only alert cops the first time you shot, and they may appear later.

- player-launched Missiles are too near sometimes, models are incorrectly drawn

-Compass is only updated if x,y changed, which is incorrect if changing from hollow to filled and
 viceversa. Also when comming from other screens it is sometimes not updated. Same reason?

- Refilling energy and shields in hyper jump is not a good idea... maybe filing shields or x2 to both could do

- Need to /2 the legal status at each jump or something...

- Energy seems to get a value >128, which becomes negative confusing the cockpit panel

- Bad initialization of planet_dist, permits a jump inmediately after launching

- Front shield (maybe rear too?) is not updated correctly (after jump). Going to another screen and getting
  back updates it.

- Are shields recharging?. Nope. If energy is negative (greater than 128) they don't recharge. Keep player maxen<128 is mandatory

- After galmap population race is wrong (change between galchart and sysinfo)

- At XEESLE you appear too far from planet (problems with wrapping). Seems solved now Zhigh is between $5 and $35, instead of $10 and $40

- Make stick tops larger 

+ Optimizing drawing of radar? It is calling pixel_address several times, also code is shared between erase and draw and it is inlined...

- Again after destroying player system hangs... not enough memory to create ships? Seems corrected again.

- Still can jump right after launching...

+ Model in the init screens get further and further slowly... ? Ok. No. The accumulation routines make
a roundoff error that actually makes the model smaller with time. Not sure what routine, should check.
If you make the orientation matrix again $40 0 0 0 $40 0 0 0 $40 0 0 0 0 0 0 0 0 0 it gets the correct
size again. This was not ocurring before????

- Fuel circle seems somewhat wrong, when it is 3.0LY planets at 2.4LY are outside. (?)

+ Snapping to planet not allways work in short chart

+ When frame rate goes too low, skip frame drawing

+ When frame rate goes too high don't simulate all the time, or make a waiting loop

